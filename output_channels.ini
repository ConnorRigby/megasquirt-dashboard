seconds          = scalar, U16,    0, "s",   1.000, 0.0
secl = { seconds % 256 }, "s" ; For runtime screen.
#if PW_4X
pulseWidth1      = scalar, U16,    2, "ms",   0.004, 0.0
pulseWidth2      = scalar, U16,    4, "ms",   0.004, 0.0
#else
pulseWidth1      = scalar, U16,    2, "ms",   0.001, 0.0
pulseWidth2      = scalar, U16,    4, "ms",   0.001, 0.0
#endif
pulseWidth       = { pulseWidth1 }, "ms" ; For runtime screen.

rpm              = scalar, U16,    6, "RPM", 1.000, 0.0
advance          = scalar, S16,    8, "deg", 0.100, 0.0

; unsigned char squirt,engine,afrtgt1,afrtgt2;    // afrtgt in afr x 10
squirt           = scalar, U08,   10, "bit", 1.000, 0.0
; Squirt Event Scheduling Variables - bit fields for "squirt" variable above
; inj1:    equ    3       ; 0 = no squirt         1 = squirt
; inj2:    equ    5       ; 0 = no squirt         1 = squirt
; sched1:  equ    2       ; 0 = nothing scheduled 1 = scheduled to squirt
; firing1: equ    0       ; 0 = not squirting     1 = squirting
; sched2:  equ    4
; firing2: equ    1
firing1          = bits,   U08,   10, [0:0]
firing2          = bits,   U08,   10, [1:1]
sched1           = bits,   U08,   10, [2:2]
inj1             = bits,   U08,   10, [3:3]
sched2           = bits,   U08,   10, [4:4]
inj2             = bits,   U08,   10, [5:5]

engine           = scalar, U08,   11, "bit", 1.000, 0.0
; Engine Operating/Status variables - bit fields for "engine" variable above
; ready:  equ     0       ; 0 = engine not ready 1 = ready to run
; crank:  equ     1       ; 0 = engine not cranking 1 = engine cranking
; startw: equ     2       ; 0 = not in startup warmup 1 = in warmup enrichment
; warmup: equ     3       ; 0 = not in warmup 1 = in warmup
; tpsaen: equ     4       ; 0 = not in TPS acceleration mode 1 = TPS acceleration mode
; tpsden: equ     5       ; 0 = not in deacceleration mode 1 = in deacceleration mode
ready            = bits,   U08,   11, [0:0]
crank            = bits,   U08,   11, [1:1]
startw           = bits,   U08,   11, [2:2]
warmup           = bits,   U08,   11, [3:3]
tpsaccaen        = bits,   U08,   11, [4:4]
tpsaccden        = bits,   U08,   11, [5:5]
mapaccaen      = bits,   U08,   11, [6:6]
mapaccden        = bits,   U08,   11, [7:7]

#if NARROW_BAND_EGO
afrtgt1          = scalar, U08,   12, "Volts", 0.00489, 0.0
afrtgt2          = scalar, U08,   13, "Volts", 0.00489, 0.0
#elif LAMBDA
afrtgt1raw       = scalar, U08,   12, "Lambda", 0.1, 0.0
afrtgt2raw       = scalar, U08,   13, "Lambda", 0.1, 0.0
#else
afrtgt1          = scalar, U08,   12, "AFR", 0.1, 0.0
afrtgt2          = scalar, U08,   13, "AFR", 0.1, 0.0
#endif
; unsigned char wbo2_en1,wbo2_en2; // from wbo2 - indicates whether wb afr valid
wbo2_en1         = scalar, U08,   14, "",    1.000, 0.0
wbo2_en2         = scalar, U08,   15, "",    1.000, 0.0

; int baro,map,mat,clt,tps,batt,ego1,ego2,knock, // baro   - kpa x 10
;                                                // map    - kpa x 10
;                                                // mat, clt deg(C/F)x 10
;                                                // tps    - % x 10
;                                                // batt   - vlts x 10
;                                                // ego1,2 - afr x 10
;                                                // knock  - volts x 10
barometer        = scalar, S16,   16, "kPa", 0.100, 0.0
map              = scalar, S16,   18, "kPa", 0.100, 0.0
#if CELSIUS
mat              = scalar, S16,   20, "�C",  0.05555, -320.0
coolant          = scalar, S16,   22, "�C",  0.05555, -320.0
#else
mat              = scalar, S16,   20, "�F",  0.100, 0.0
coolant          = scalar, S16,   22, "�F",  0.100, 0.0
#endif
tps              = scalar, S16,   24, "%",   0.100, 0.0
throttle         = { tps }, "%"
batteryVoltage   = scalar, S16,   26, "v",   0.100, 0.0
afr1_old         = scalar, S16,   28, "AFR", 0.100, 0.0
afr2_old         = scalar, S16,   30, "AFR", 0.100, 0.0
knock            = scalar, S16,   32, "%",   0.100, 0.0

; egocor1,egocor2,aircor,warmcor,     // all in %
egoCorrection1   = scalar, S16,   34, "%",   0.1000, 0.0
egoCorrection = { ( egoCorrection1 + egoCorrection2) / 2 }, "%" ; Alias for old gauges.
egoCorrection2   = scalar, S16,   36, "%",   0.1000, 0.0
airCorrection    = scalar, S16,   38, "%",   0.1000, 0.0
warmupEnrich     = scalar, S16,   40, "%",   1.000, 0.0

; tpsaccel,tpsfuelcut,barocor,gammae, // tpsaccel - acc enrich(.1 ms units)
;                                     // tpsfuelcut - %
;                                     // barcor,gammae - %
accelEnrich      = scalar, S16,   42, "ms", 0.100, 0.0
tpsfuelcut       = scalar, S16,   44, "%",   1.000, 0.0
baroCorrection   = scalar, S16,   46, "%",   0.1000, 0.0
gammaEnrich      = scalar, S16,   48, "%",   1.000, 0.0

;  vecurr1,vecurr2,iacstep,cold_adv_deg;           // vecurr - %
;                                                  // iacstep - steps
;                                                  // cold_adv_deg - deg x 10
veCurr1          = scalar, S16,   50, "%",   0.1000, 0.0
veCurr2          = scalar, S16,   52, "%",   0.1000, 0.0
veCurr           = { veCurr1 }, "%" ; For runtime display.
iacstep          = scalar, S16,   54, "",    1.000, 0.0
idleDC           = scalar, S16,   54, "%",    0.392, 0.0
coldAdvDeg       = scalar, S16,   56, "deg", 0.100, 0.0
TPSdot           = scalar, S16,   58, "%/s",   0.100, 0.0
MAPdot           = scalar, S16,   60, "kPa/s", 1.000, 0.0
dwell            = scalar, U16,   62, "ms",    0.1000, 0.0
mafload          = scalar, S16,   64, "kPa",     0.1000, 0.0
fuelload         = scalar, S16,   66, { bitStringValue( algorithmUnits , algorithm  ) },   0.100, 0.0 ; Blend of MAP and TPS, depends on algorithm
fuelCorrection   = scalar, S16,   68, "%",     1.000, 0.0 ; Correction based on percent alcohol in fuel.
sd_status        = scalar, U08,   70,  "", 1.0, 0.0
knockRetard      = scalar, U08,   71, "deg",     0.1, 0.0
EAEFuelCorr1     = scalar, U16,   72, "%",  1.0, 0.0
egoV             = scalar, S16,   74, "V", 0.01, 0.0 ; was omitted
egoV2            = scalar, S16,   76, "V", 0.01, 0.0 ; was omitted
status1          = scalar, U08,   78, "", 1.0, 0.0 ; status1
status2          = scalar, U08,   79, "", 1.0, 0.0 ; status2
status3          = scalar, U08,   80, "", 1.0, 0.0 ; status3
status4          = scalar, U08,   81, "", 1.0, 0.0 ; status4
status6          = scalar, U08,   82, "", 1.0, 0.0
status7          = scalar, U08,   83, "", 1.0, 0.0
status5          = scalar, U16,   84, "", 1, 0 ; istatus5
status5s         = scalar, S16,   84, "", 1, 0 ; istatus5
cel_status        = scalar, U16,   86, "bit",   1.000, 0.0 ; engine fault bits
cel_status_map    = bits,   U08,   87, [0:0] ; low byte
cel_status_mat    = bits,   U08,   87, [1:1]
cel_status_clt    = bits,   U08,   87, [2:2]
cel_status_tps    = bits,   U08,   87, [3:3]
cel_status_batt   = bits,   U08,   87, [4:4]
cel_status_afr0   = bits,   U08,   87, [5:5]
cel_status_sync   = bits,   U08,   87, [6:6]
cel_status_egt    = bits,   U08,   87, [7:7]
cel_status_flex   = bits,   U08,   86, [0:0] ; high byte
cel_status_maf    = bits,   U08,   86, [1:1] ; high byte
cel_status_knock  = bits,   U08,   86, [2:2] ; high byte
cel_status_cam    = bits,   U08,   86, [3:3] ; high byte
cel_status_oil    = bits,   U08,   86, [4:4] ; high byte
cel_status_fp     = bits,   U08,   86, [5:5] ; high byte
cel_status_egtshut= bits,   U08,   86, [6:6] ; high byte
cel_status_afrshut= bits,   U08,   86, [7:7] ; high byte
fuelload2        = scalar, S16,   88, { bitStringValue( algorithmUnits , algorithm2  ) },    0.100, 0.0
ignload              = scalar, S16,   90, "%",    0.100, 0.0
ignload2             = scalar, S16,   92, "%",    0.100, 0.0
synccnt          = scalar, U08,   94, "", 1, 0
syncreason       = scalar, U08,   95,  "", 1.0, 0.0
wallfuel1        = scalar, U32,   96, "uS",    0.010, 0.0
wallfuel2        = scalar, U32,  100, "uS", 1.000, 0.0
sensor01             = scalar, S16,  104, "",   0.1000, 0.0
sensor02         = scalar, S16,  106, "",   0.1000, 0.0
sensor03             = scalar, S16,  108, "",   0.1000, 0.0
sensor04             = scalar, S16,  110, "",   0.1000, 0.0
sensor05             = scalar, S16,  112, "",   0.1000, 0.0
sensor06             = scalar, S16,  114, "",   0.1000, 0.0
sensor07             = scalar, S16,  116, "",   0.1000, 0.0
sensor08             = scalar, S16,  118, "",   0.1000, 0.0
sensor09             = scalar, S16,  120, "",   0.1000, 0.0
sensor10         = scalar, S16,  122, "",   0.1000, 0.0
sensor11         = scalar, S16,  124, "",   0.1000, 0.0
sensor12         = scalar, S16,  126, "",   0.1000, 0.0
sensor13         = scalar, S16,  128, "",   0.1000, 0.0
sensor14         = scalar, S16,  130, "",   0.1000, 0.0
sensor15         = scalar, S16,  132, "",   0.1000, 0.0
sensor16         = scalar, S16,  134, "",   0.1000, 0.0
canin1_8             = scalar, U08,  136, "",   1.000, 0.0
canout1_8        = scalar, U08,  137, "",   1.000, 0.0
canout9_16       = scalar, U08,  138, "",   1.000, 0.0
boostduty        = scalar, U08,  139 , "%",  1.0, 0.0
#if PW_4X
n2o_addfuel      = scalar, S16,  140, "ms",  0.004, 0
#else
n2o_addfuel      = scalar, S16,  140, "ms",  0.001, 0
#endif
n2o_retard       = scalar, S16,  142, "deg",  0.1, 0
#if PW_4X
pwseq1           = scalar, U16,  144,  "ms", 0.004, 0.0
pwseq2           = scalar, U16,  146,  "ms", 0.004, 0.0
pwseq3           = scalar, U16,  148,  "ms", 0.004, 0.0
pwseq4           = scalar, U16,  150,  "ms", 0.004, 0.0
pwseq5           = scalar, U16,  152,  "ms", 0.004, 0.0
pwseq6           = scalar, U16,  154,  "ms", 0.004, 0.0
pwseq7           = scalar, U16,  156,  "ms", 0.004, 0.0
pwseq8           = scalar, U16,  158,  "ms", 0.004, 0.0
pwseq9           = scalar, U16,  160,  "ms", 0.004, 0.0
pwseq10          = scalar, U16,  162,  "ms", 0.004, 0.0
pwseq11          = scalar, U16,  164,  "ms", 0.004, 0.0
pwseq12          = scalar, U16,  166,  "ms", 0.004, 0.0
pwseq13          = scalar, U16,  168,  "ms", 0.004, 0.0
pwseq14          = scalar, U16,  170,  "ms", 0.004, 0.0
pwseq15          = scalar, U16,  172,  "ms", 0.004, 0.0
pwseq16          = scalar, U16,  174,  "ms", 0.004, 0.0
#else
pwseq1           = scalar, U16,  144,  "ms", 0.001, 0.0
pwseq2           = scalar, U16,  146,  "ms", 0.001, 0.0
pwseq3           = scalar, U16,  148,  "ms", 0.001, 0.0
pwseq4           = scalar, U16,  150,  "ms", 0.001, 0.0
pwseq5           = scalar, U16,  152,  "ms", 0.001, 0.0
pwseq6           = scalar, U16,  154,  "ms", 0.001, 0.0
pwseq7           = scalar, U16,  156,  "ms", 0.001, 0.0
pwseq8           = scalar, U16,  158,  "ms", 0.001, 0.0
pwseq9           = scalar, U16,  160,  "ms", 0.001, 0.0
pwseq10          = scalar, U16,  162,  "ms", 0.001, 0.0
pwseq11          = scalar, U16,  164,  "ms", 0.001, 0.0
pwseq12          = scalar, U16,  166,  "ms", 0.001, 0.0
pwseq13          = scalar, U16,  168,  "ms", 0.001, 0.0
pwseq14          = scalar, U16,  170,  "ms", 0.001, 0.0
pwseq15          = scalar, U16,  172,  "ms", 0.001, 0.0
pwseq16          = scalar, U16,  174,  "ms", 0.001, 0.0
#endif
nitrous1_duty   = scalar, U08,  176, "%", 1, 0
nitrous2_duty   = scalar, U08,  177, "%", 1, 0
#if CELSIUS
egt1            = scalar, S16,  178, "�C",  0.05555, -320
egt2            = scalar, S16,  180, "�C",  0.05555, -320
egt3            = scalar, S16,  182, "�C",  0.05555, -320
egt4            = scalar, S16,  184, "�C",  0.05555, -320
egt5            = scalar, S16,  186, "�C",  0.05555, -320
egt6            = scalar, S16,  188, "�C",  0.05555, -320
egt7            = scalar, S16,  190, "�C",  0.05555, -320
egt8            = scalar, S16,  192, "�C",  0.05555, -320
egt9            = scalar, S16,  194, "�C",  0.05555, -320
egt10           = scalar, S16,  196, "�C",  0.05555, -320
egt11           = scalar, S16,  198, "�C",  0.05555, -320
egt12           = scalar, S16,  200, "�C",  0.05555, -320
;   egt13           = scalar, S16,  202, "�C",  0.05555, -320
;   egt14           = scalar, S16,  204, "�C",  0.05555, -320
;   egt15           = scalar, S16,  206, "�C",  0.05555, -320
;   egt16           = scalar, S16,  208, "�C",  0.05555, -320
#else
egt1            = scalar, S16,  178, "�F", 0.1, 0
egt2            = scalar, S16,  180, "�F", 0.1, 0
egt3            = scalar, S16,  182, "�F", 0.1, 0
egt4            = scalar, S16,  184, "�F", 0.1, 0
egt5            = scalar, S16,  186, "�F", 0.1, 0
egt6            = scalar, S16,  188, "�F", 0.1, 0
egt7            = scalar, S16,  190, "�F", 0.1, 0
egt8            = scalar, S16,  192, "�F", 0.1, 0
egt9            = scalar, S16,  194, "�F", 0.1, 0
egt10           = scalar, S16,  196, "�F", 0.1, 0
egt11           = scalar, S16,  198, "�F", 0.1, 0
egt12           = scalar, S16,  200, "�F", 0.1, 0
;   egt13           = scalar, S16,  202, "�F", 0.1, 0
;   egt14           = scalar, S16,  204, "�F", 0.1, 0
;   egt15           = scalar, S16,  206, "�F", 0.1, 0
;   egt16           = scalar, S16,  208, "�F", 0.1, 0
#endif
; start repurposed zone
dome_fill_duty1 = scalar, U08, 202, "%", 1, 0
dome_fill_duty2 = scalar, U08, 203, "%", 1, 0
dome_empty_duty1= scalar, U08, 204, "%", 1, 0
dome_empty_duty2= scalar, U08, 205, "%", 1, 0
app             = scalar, S16, 206, "%", 0.0100, 0.0
throttle_targ   = scalar, S16, 208, "%", 0.0100, 0.0
;end repurposed zone
maf             = scalar, U16,  210, "g/sec", { 0.010 * (maf_range + 1) }, 0.0
canpwmin0        = scalar, U16,  212, "",   1.000, 0.0
canpwmin1        = scalar, U16,  214, "",   1.000, 0.0
canpwmin2        = scalar, U16,  216, "",   1.000, 0.0
canpwmin3        = scalar, U16,  218, "",   1.000, 0.0
fuelflow         = scalar, U16,  220, "cc/min",   1, 0.0
fuelcons         = scalar, U16,  222, "l/km",   1, 0.0
EAEFuelCorr2     = scalar, U16,  224 , "%",  1.0, 0.0
tpsADC           = scalar, U16,  226, "ADC", 1, 0 ; REAL for calibrator
eaeload1         = scalar, S16,  228, { bitStringValue( algorithmUnits ,  (eaeload ? eaeload : algorithm) ) },  0.1000, 0.0
afrload1         = scalar, S16,  230, { bitStringValue( algorithmUnits ,  (afrload ? afrload : algorithm) ) },  0.1000, 0.0
gear            = scalar, U08,  232, "", 1, 0
timing_err       = scalar, S08,  233, "%", 1, 0 ; accuracy of timing prediction
RPMdot          = scalar, S16,  234, "rpm/sec", 10, 0
vss1dot         = scalar, S16,  236, "ms-2", 0.1, 0
vss2dot         = scalar, S16,  238, "ms-2", 0.1, 0
accelx          = scalar, S16,  240, "ms-2", 0.001, 0
accely          = scalar, S16,  242, "ms-2", 0.001, 0
accelz          = scalar, S16,  244, "ms-2", 0.001, 0
duty_pwm_a      = scalar, U08,  246, "%", 1, 0
duty_pwm_b      = scalar, U08,  247, "%", 1, 0
duty_pwm_c      = scalar, U08,  248, "%", 1, 0
duty_pwm_d      = scalar, U08,  249, "%", 1, 0
duty_pwm_e      = scalar, U08,  250, "%", 1, 0
duty_pwm_f      = scalar, U08,  251, "%", 1, 0
afr1            = scalar, U08,  252, "AFR", 0.1, 0.0
afr2            = scalar, U08,  253, "AFR", 0.1, 0.0
afr3            = scalar, U08,  254, "AFR", 0.1, 0.0
afr4            = scalar, U08,  255, "AFR", 0.1, 0.0
afr5            = scalar, U08,  256, "AFR", 0.1, 0.0
afr6            = scalar, U08,  257, "AFR", 0.1, 0.0
afr7            = scalar, U08,  258, "AFR", 0.1, 0.0
afr8            = scalar, U08,  259, "AFR", 0.1, 0.0
afr9            = scalar, U08,  260, "AFR", 0.1, 0.0
afr10           = scalar, U08,  261, "AFR", 0.1, 0.0
afr11           = scalar, U08,  262, "AFR", 0.1, 0.0
afr12           = scalar, U08,  263, "AFR", 0.1, 0.0
afr13           = scalar, U08,  264, "AFR", 0.1, 0.0
afr14           = scalar, U08,  265, "AFR", 0.1, 0.0
afr15           = scalar, U08,  266, "AFR", 0.1, 0.0
afr16           = scalar, U08,  267, "AFR", 0.1, 0.0
egov1           = scalar, U16,  268, "V",  0.00489, 0.0
egov2           = scalar, U16,  270, "V",  0.00489, 0.0
egov3           = scalar, U16,  272, "V",  0.00489, 0.0
egov4           = scalar, U16,  274, "V",  0.00489, 0.0
egov5           = scalar, U16,  276, "V",  0.00489, 0.0
egov6           = scalar, U16,  278, "V",  0.00489, 0.0
egov7           = scalar, U16,  280, "V",  0.00489, 0.0
egov8           = scalar, U16,  282, "V",  0.00489, 0.0
egov9           = scalar, U16,  284, "V",  0.00489, 0.0
egov10          = scalar, U16,  286, "V",  0.00489, 0.0
egov11          = scalar, U16,  288, "V",  0.00489, 0.0
egov12          = scalar, U16,  290, "V",  0.00489, 0.0
;    egov13          = scalar, U16,  292, "V",  0.00489, 0.0
;    egov14          = scalar, U16,  294, "V",  0.00489, 0.0
;    egov15          = scalar, U16,  296, "V",  0.00489, 0.0
;    egov16          = scalar, U16,  298, "V",  0.00489, 0.0
ve_raw1         =  scalar, S16,   292, "%",   0.1000, 0.0
ve_raw2         =  scalar, S16,   294, "%",   0.1000, 0.0
ve_raw3         =  scalar, S16,   296, "%",   0.1000, 0.0
ve_raw4         =  scalar, S16,   298, "%",   0.1000, 0.0
egocor1         = scalar, S16,  300, "%",  0.1000, 0.0
egocor2         = scalar, S16,  302, "%",  0.1000, 0.0
egocor3         = scalar, S16,  304, "%",  0.1000, 0.0
egocor4         = scalar, S16,  306, "%",  0.1000, 0.0
egocor5         = scalar, S16,  308, "%",  0.1000, 0.0
egocor6         = scalar, S16,  310, "%",  0.1000, 0.0
egocor7         = scalar, S16,  312, "%",  0.1000, 0.0
egocor8         = scalar, S16,  314, "%",  0.1000, 0.0
egocor9         = scalar, S16,  316, "%",  0.1000, 0.0
egocor10        = scalar, S16,  318, "%",  0.1000, 0.0
egocor11        = scalar, S16,  320, "%",  0.1000, 0.0
egocor12        = scalar, S16,  322, "%",  0.1000, 0.0
;    egocor13        = scalar, S16,  324, "%",  0.1000, 0.0
;    egocor14        = scalar, S16,  326, "%",  0.1000, 0.0
;    egocor15        = scalar, S16,  328, "%",  0.1000, 0.0
;    egocor16        = scalar, S16,  330, "%",  0.1000, 0.0
ports             = scalar, U08,   324, "bit",   1.000, 0.0 ; raw i/o port status bits
ports0            = bits,   U08,   324, [0:0]
ports1            = bits,   U08,   324, [1:1]
ports2            = bits,   U08,   324, [2:2]
ports3            = bits,   U08,   324, [3:3]
ports4            = bits,   U08,   324, [4:4]
ports5            = bits,   U08,   324, [5:5]
ports6            = bits,   U08,   324, [6:6]
ports7            = bits,   U08,   324, [7:7]

portm             = scalar, U08,   325, "bit",   1.000, 0.0 ; raw i/o port status bits
portm0            = bits,   U08,   325, [0:0]
portm1            = bits,   U08,   325, [1:1]
;   portm2            = bits,   U08,   325, [2:2]
;   portm3            = bits,   U08,   325, [3:3]
;   portm4            = bits,   U08,   325, [4:4]
;   portm5            = bits,   U08,   325, [5:5]
portm6            = bits,   U08,   325, [6:6]
portm7            = bits,   U08,   325, [7:7]
boost_dome_targ1 = scalar, S16,   326, "kPa", 0.1, 0
boost_dome_targ2 = scalar, S16,   328, "kPa", 0.1, 0
status9          = scalar, U08, 330, "", 1, 0
;1 byte free
stream_level     = scalar, U08,  332,  "", 1,0
water_duty       = scalar, U08,  333, "%", 1, 0
dwell_trl        = scalar, U16,  334,  "ms", 0.1000, 0.0
vss1             = scalar, U16,  336, { bitStringValue( prefSpeedUnits ,  prefSpeedUnits ) }, { msToPrefUnitsScale }, 0.0
vss2             = scalar, U16,  338, { bitStringValue( prefSpeedUnits ,  prefSpeedUnits ) }, { msToPrefUnitsScale }, 0.0
vss1_ms_1        = scalar, U16,  336, "ms-1", 0.1, 0.0 ; see calcs converting this raw number into kph or mph
vss2_ms_1        = scalar, U16,  338, "ms-1", 0.1, 0.0
ss1             = scalar, U16,  340, "RPM", 10.000, 0.0 ; now in steps of 10 rpm
ss2             = scalar, U16,  342, "RPM", 10.000, 0.0
nitrous_timer   = scalar, U16,  344, "s", 0.001, 0
sd_filenum      = scalar, U16,  346, "", 1, 0
sd_error        = scalar, U08,  348, "", 1, 0
sd_phase        = scalar, U08,  349, "", 1, 0
boostduty2      = scalar, U08,  350 , "%",  1.0, 0.0
status8         = scalar, U08,  351, "", 1.0, 0.0
vvt_ang1        = scalar, S16,  352, "deg", 0.100, 0.0
vvt_ang2        = scalar, S16,  354, "deg", 0.100, 0.0
vvt_ang3        = scalar, S16,  356, "deg", 0.100, 0.0
vvt_ang4        = scalar, S16,  358, "deg", 0.100, 0.0
inj_timing_pri  = scalar, S16,  360, "deg", 0.100, 0.0
inj_timing_sec  = scalar, S16,  362, "deg", 0.100, 0.0
vvt_target1     = scalar, S16,  364, "deg", 0.100, 0.0
vvt_target2     = scalar, S16,  366, "deg", 0.100, 0.0
vvt_target3     = scalar, S16,  368, "deg", 0.100, 0.0
vvt_target4     = scalar, S16,  370, "deg", 0.100, 0.0
vvt_duty1       = scalar, U08,  372 , "%",    0.392, 0.0
vvt_duty2       = scalar, U08,  373 , "%",    0.392, 0.0
vvt_duty3       = scalar, U08,  374 , "%",    0.392, 0.0
vvt_duty4       = scalar, U08,  375 , "%",    0.392, 0.0
fuel_pct        = scalar, U16,  376,  "%",  0.1000, 0.0
#if CELSIUS
fuel_temp1        = scalar, S16,  378, "�C",  0.05555, -320.0
fuel_temp2        = scalar, S16,  380, "�C",  0.05555, -320.0
#else
fuel_temp1        = scalar, S16,  378, "�F",  0.100, 0.0
fuel_temp2        = scalar, S16,  380, "�C",  0.05555, -320.0
#endif
tps_accel       = scalar, S16,  382,  "%",  0.1000, 0.0
map_accel       = scalar, S16,  384,  "%",  0.1000, 0.0
total_accel     = scalar, S16,  386,  "%",  0.1000, 0.0
knock_cyl01         = scalar, U08, 388, "%", 0.4, 0
knock_cyl02         = scalar, U08, 389, "%", 0.4, 0
knock_cyl03         = scalar, U08, 390, "%", 0.4, 0
knock_cyl04         = scalar, U08, 391, "%", 0.4, 0
knock_cyl05         = scalar, U08, 392, "%", 0.4, 0
knock_cyl06         = scalar, U08, 393, "%", 0.4, 0
knock_cyl07         = scalar, U08, 394, "%", 0.4, 0
knock_cyl08         = scalar, U08, 395, "%", 0.4, 0
knock_cyl09         = scalar, U08, 396, "%", 0.4, 0
knock_cyl10         = scalar, U08, 397, "%", 0.4, 0
knock_cyl11         = scalar, U08, 398, "%", 0.4, 0
knock_cyl12         = scalar, U08, 399, "%", 0.4, 0
knock_cyl13         = scalar, U08, 400, "%", 0.4, 0
knock_cyl14         = scalar, U08, 401, "%", 0.4, 0
knock_cyl15         = scalar, U08, 402, "%", 0.4, 0
knock_cyl16         = scalar, U08, 403, "%", 0.4, 0
launch_timer   = scalar, U16,  404, "s", 0.001, 0
launch_retard  = scalar, S16,  406, "deg",  0.1, 0
maf_volts   = scalar, U16,   408, "V",   0.001, 0.0
porta             = scalar, U08,   410, "bit",   1.000, 0.0 ; raw i/o port status bits
porta0            = bits,   U08,   410, [0:0]
porta1            = bits,   U08,   410, [1:1]
porta2            = bits,   U08,   410, [2:2]
porta3            = bits,   U08,   410, [3:3]
porta4            = bits,   U08,   410, [4:4]
porta5            = bits,   U08,   410, [5:5]
porta6            = bits,   U08,   410, [6:6]
porta7            = bits,   U08,   410, [7:7]

portb             = scalar, U08,   411, "bit",   1.000, 0.0 ; raw i/o port status bits
portb0            = bits,   U08,   411, [0:0]
portb1            = bits,   U08,   411, [1:1]
portb2            = bits,   U08,   411, [2:2]
portb3            = bits,   U08,   411, [3:3]
portb4            = bits,   U08,   411, [4:4]
portb5            = bits,   U08,   411, [5:5]
portb6            = bits,   U08,   411, [6:6]
portb7            = bits,   U08,   411, [7:7]

porteh            = scalar, U08,   412, "bit",   1.000, 0.0 ; raw i/o port status bits
porte0            = bits,   U08,   412, [0:0]
porte1            = bits,   U08,   412, [1:1]
porte2            = bits,   U08,   412, [2:2]
porte4            = bits,   U08,   412, [4:4]
porth6            = bits,   U08,   412, [6:6]
porth7            = bits,   U08,   412, [7:7]

portk             = scalar, U08,   413, "bit",   1.000, 0.0 ; raw i/o port status bits
portk0            = bits,   U08,   413, [0:0]
portk1            = bits,   U08,   413, [1:1]
portk2            = bits,   U08,   413, [2:2]
portk3            = bits,   U08,   413, [3:3]
portk4            = bits,   U08,   413, [4:4]
portk5            = bits,   U08,   413, [5:5]
portk7            = bits,   U08,   413, [7:7]

portmj            = scalar, U08,   414, "bit",   1.000, 0.0 ; raw i/o port status bits
portj0            = bits,   U08,   414, [0:0]
portj1            = bits,   U08,   414, [1:1]
portm2            = bits,   U08,   414, [2:2]
portm3            = bits,   U08,   414, [3:3]
portm4            = bits,   U08,   414, [4:4]
portm5            = bits,   U08,   414, [5:5]
portj7            = bits,   U08,   414, [7:7]

portp             = scalar, U08,   415, "bit",   1.000, 0.0 ; raw i/o port status bits
portp2            = bits,   U08,   415, [2:2]
portp3            = bits,   U08,   415, [3:3]
portp4            = bits,   U08,   415, [4:4]
portp5            = bits,   U08,   415, [5:5]
portp6            = bits,   U08,   415, [6:6]
portp7            = bits,   U08,   415, [7:7]

portt             = scalar, U08,   416, "bit",   1.000, 0.0 ; raw i/o port status bits
portt0            = bits,   U08,   416, [0:0]
portt1            = bits,   U08,   416, [1:1]
portt2            = bits,   U08,   416, [2:2]
portt3            = bits,   U08,   416, [3:3]
portt4            = bits,   U08,   416, [4:4]
portt5            = bits,   U08,   416, [5:5]
portt6            = bits,   U08,   416, [6:6]
portt7            = bits,   U08,   416, [7:7]
cel_errorcode     = scalar, U08,  417, "bit", 1, 0.0
boost_targ_1      = scalar, S16,   418, "kPa", 0.1, 0
boost_targ_2      = scalar, S16,   420, "kPa", 0.1, 0
#if CELSIUS
airtemp          = scalar, S16,   422, "�C",  0.05555, -320.0
#else
airtemp          = scalar, S16,   422, "�F",  0.100, 0.0
#endif
looptime         = scalar, U16,   424, "us", 1.0, 0.0
vss3             = scalar, U16,  426, { bitStringValue( prefSpeedUnits ,  prefSpeedUnits ) }, { msToPrefUnitsScale }, 0.0
vss4             = scalar, U16,  428, { bitStringValue( prefSpeedUnits ,  prefSpeedUnits ) }, { msToPrefUnitsScale }, 0.0
vss3_ms_1        = scalar, U16,  426, "ms-1", 0.1, 0.0
vss4_ms_1        = scalar, U16,  428, "ms-1", 0.1, 0.0
fuel_press1      = scalar, S16,  430, "kPa", 0.100, 0.0
fuel_press2      = scalar, S16,  432, "kPa", 0.100, 0.0
cl_idle_targ_rpm = scalar, U16,  434, "rpm", 1, 0
fp_duty          = scalar, U08,  436, "%",   0.392, 0.0
alt_duty         = scalar, U08,  437, "%",   1, 0.0
alt_period       = scalar, U08,  437, "ms",  0.128, 0.0
load_duty        = scalar, U08,  438, "%",   1, 0.0
alt_targv        = scalar, U08,  439, "V",   0.100, 0.0
batt_curr        = scalar, S16,  440, "A",   0.1, 0.0
fueltemp_cor     = scalar, S16,  442, "%",   0.100, 0.0
fuelpress_cor    = scalar, S16,  444, "%",   0.100, 0.0
ltt_cor          = scalar, S08,  446, "%",   0.100, 0.0
engine_state_cruise = bits, U08, 447, [0:0]
engine_state_accel_slow = bits, U08, 447, [1:1]
;   engine_state_accel_fast = bits, U08, 447, [2:2]
engine_state_decel_slow = bits, U08, 447, [3:3]
;   engine_state_decel_fast = bits, U08, 447, [4:4]
engine_state_overrun = bits, U08, 447, [5:5]
engine_state_idle = bits, U08, 447, [6:6]
engine_state_wot = bits, U08, 447, [7:7]
tc_retard        = scalar, S16,    448, "deg", 0.100, 0.0
cel_retard       = scalar, S16,    450, "deg", 0.100, 0.0
fc_retard        = scalar, S16,    452, "deg", 0.100, 0.0
ext_advance       = scalar, S16,    454, "deg", 0.100, 0.0
base_advance     = scalar, S16,    456, "deg", 0.100, 0.0
idle_cor_advance = scalar, S16,    458, "deg", 0.100, 0.0
mat_retard       = scalar, S16,    460, "deg", 0.100, 0.0
flex_advance     = scalar, S16,    462, "deg", 0.100, 0.0
adv1             = scalar, S16,    464, "deg", 0.100, 0.0
adv2             = scalar, S16,    466, "deg", 0.100, 0.0
adv3             = scalar, S16,    468, "deg", 0.100, 0.0
adv4             = scalar, S16,    470, "deg", 0.100, 0.0
revlim_retard    = scalar, S16,    472, "deg", 0.100, 0.0
als_timing       = scalar, S16,    474, "deg", 0.100, 0.0
#if PW_4X
als_addfuel      = scalar, S16,    476, "ms", 0.004, 0.0
deadtime1        = scalar, S16,    478, "ms", 0.004, 0.0
#else
als_addfuel      = scalar, S16,    476, "ms", 0.001, 0.0
deadtime1        = scalar, S16,    478, "ms", 0.001, 0.0
#endif
launch_timing    = scalar, S16,    480, "deg", 0.100, 0.0
step3_timing     = scalar, S16,    482, "deg", 0.100, 0.0
launchvss_retard = scalar, S16,    484, "deg", 0.100, 0.0
;   cel_status2_xx   = bits,   U08,   486, [0:0] ; high byte
cel_status2        = scalar, U16,   486, "bit",   1.000, 0.0 ; engine fault bits
cel_status2_winj   = bits,   U08,   487, [0:0] ; low byte
cel_status2_shutd  = bits,   U08,   487, [1:1]
gps_latdeg       = scalar, S08,  488, "", 1,0
gps_latmin       = scalar, U08,  489, "", 1,0
gps_latmmin      = scalar, U16,  490, "", 1,0
gps_londeg       = scalar, U08,  492, "", 1,0
gps_lonmin       = scalar, U08,  493, "", 1,0
gps_lonmmin      = scalar, U16,  494, "", 1,0
gps_outstatus    = scalar, U08,  496, "", 1,0
gps_altk         = scalar, S08,  497, "", 1,0
gps_altm         = scalar, S16,  498, "", 0.1,0
gps_speed       = scalar, U16,  500, { bitStringValue( prefSpeedUnits ,  prefSpeedUnits ) }, { msToPrefUnitsScale }, 0.0
gps_speed_ms_1        = scalar, U16,  500, "ms-1", 0.1, 0.0
gps_course       = scalar, U16,  502, "", 0.1,0
generic_pid_duty_a = scalar, U08,  504, "%", 0.392, 0.0
generic_pid_duty_b = scalar, U08,  505, "%", 0.392, 0.0
tc_slipxtime     = scalar, U16,  506, "", 1,0
loop            = scalar, U08, 508, "", 1, 0
can_error_cnt   = scalar, U08, 509, "", 1,0
can_error       = scalar, U16, 510, "", 1,0
;    can_error_rxovr       = bits, U08, 510, [0:0]
;    can_error_rxwrn       = bits, U08, 510, [0:0]
;    can_error_rxerr       = bits, U08, 510, [0:0]
;    can_error_txwrn       = bits, U08, 510, [0:0]
;    can_error_txerr       = bits, U08, 510, [0:0]
;    can_error_pass       = bits, U08, 510, [0:0]
;    can_error_oor       = bits, U08, 510, [0:0]
;    can_error_pass2       = bits, U08, 510, [0:0]
